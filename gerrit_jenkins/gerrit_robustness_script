#!/bin/bash

for index in {1..3};
do
    if [ "$GERRIT_PROJECT" == "boardfarm-cbn" -o "$GERRIT_PROJECT" == "boardfarm-lgi" ]; then
            cd /home/gerrit_merge/cbn/boardfarm
            git fetch origin master
            git reset --hard FETCH_HEAD
            rm /home/gerrit_merge/cbn/boardfarm/results/test_results.json
            cd /home/gerrit_merge/cbn/$GERRIT_PROJECT
            sha=$(git rev-parse HEAD)
            # TODO: don't hard code username
            git fetch http://jenkins:cbncbn@$GERRIT_HOST:8080/$GERRIT_PROJECT.git $GERRIT_REFSPEC
            #git checkout FETCH_HEAD
            #git rebase $sha
            git reset --hard FETCH_HEAD
            gerrit_host=$GERRIT_HOST
            gerrit_port=$GERRIT_PORT
            gerrit_patchset_rev=$GERRIT_PATCHSET_REVISION
            gerrit_user="jenkins_cbn@"
            export change_list="$GERRIT_CHANGE_NUMBER,$GERRIT_PATCHSET_NUMBER"
            always_send_email=1

            #git show FETCH_HEAD
            echo "[cbn_robustness]" > tmp.txt
    		echo "RootFSBootTest" >> tmp.txt
            new_tests=$(for t in `git show FETCH_HEAD  | sed -n 's/+class\s*\(.*\)(.*/\1/p' | tr '\n' ' '`; do echo "$t" >> tmp.txt ;done)
            second_test=$(for t in `git show FETCH_HEAD  | sed -n 's/^ class\s*\(.*\)(.*/\1/p' | tr '\n' ' '`; do echo "$t" >> tmp.txt ;done)
            filename='tmp.txt'
    		exec < $filename
    		> choose_list.txt
    		while read line
    		do
        		if [[ $line =~ NTL7465LG\_\_P[0-9]{1}\_\_[0-9]{1,} ]];
        		then
            		echo $line >> choose_list.txt
        		fi
    		done

    		count=$(grep -c "" choose_list.txt)

    		if [ "$count" -ge 5 ];
    		then
        	:
    		elif [ "$count" == "4" ];
    		then
        		sort --random-sort generic_data_base.txt | head -n 1 | tee -a choose_list.txt
    		elif [ "$count" == "3" ];
    		then
        		sort --random-sort generic_data_base.txt | head -n 2 | tee -a choose_list.txt
    		elif [ "$count" == "2" ]
    		then
        		sort --random-sort generic_data_base.txt | head -n 3 | tee -a choose_list.txt
    		elif [ "$count" == "1" ]
    		then
        		sort --random-sort generic_data_base.txt | head -n 4 | tee -a choose_list.txt
    		fi

    		shuf choose_list.txt -o choose_random_list.txt

    		testsuite='choose_random_list.txt'
            #testsuite='choose_list.txt'
    		exec < $testsuite
    		echo "[cbn_robustness]" > testsuites_staging.cfg
    		echo "RootFSBootTest" >> testsuites_staging.cfg
    		echo "NTL7465LG__P1__85" >> testsuites_staging.cfg
    		while read line
    		do
        		if [[ $line =~ NTL7465LG\_\_P[0-9]{1}\_\_[0-9]{1,} ]];
        		then
            		echo $line >> testsuites_staging.cfg
        		fi
    		done
            #features () {
            feature=$(git show | sed -n 's/\s*Features:\s*\(.*\)$/\1/p' | tr '\n' ' ')
            if [ -z "$feature" ]; then
            	echo "feature is empty"
                feature="generic"
            fi
            echo "./bft -b mv1 -x cbn_robustness -f $feature | ~/scripts/hpaste | tee results.txt"
            #extra_args="$extra_args $(new_tests) $(features)"
            export BFT_CONFIG=/home/gerrit_merge/cbn/boardfarm-cbn/cbn.json
            export BFT_OVERLAY=/home/gerrit_merge/cbn/boardfarm-cbn
            cd /home/gerrit_merge/cbn/boardfarm;
    		./bft -b mv1 -x cbn_robustness -f $feature -m http://172.16.1.2/CH7465LG-NCIP-6.15.28-ENG1-SH.p7 | ~/scripts/hpaste | tee results.txt
            result_addr=$(cat results.txt)
            cd -
    fi
    > /home/gerrit_merge/cbn/merge_"$index"_test_result.txt
    if [ -n "$gerrit_host" ]; then
            # if this was trigger by gerrit and not a job we care
            # more about that change than the image / upstream job used
            trigger_job_name=$GERRIT_CHANGE_URL
            any_failures=$(cat /home/gerrit_merge/cbn/boardfarm/results/test_results.json | jq ' .tests_fail')
            any_skip=$(cat /home/gerrit_merge/cbn/boardfarm/results/test_results.json | jq ' .tests_skip')

            if [ "$any_failures" -eq 0 ] && [ "$any_skip" -eq 0 ]; then
            		cat /home/gerrit_merge/cbn/boardfarm/results/test_results.json | jq '.test_results[] | [ .grade, .name, .message, .elapsed_time ] | @tsv' | \
                            sed -e 's/"//g' -e 's/\\t/    /g' | \
                            while read -r line; do
                            		echo "$line" >> /home/gerrit_merge/cbn/merge_"$index"_test_result.txt
                            done
                    result_for_human=$(cat /home/gerrit_merge/cbn/merge_"$index"_test_result.txt)
                    ssh $gerrit_user$gerrit_host -p $gerrit_port gerrit review $gerrit_patchset_rev -m "'" "CBN-$result_for_human""'"
                    ssh $gerrit_user$gerrit_host -p $gerrit_port gerrit review $gerrit_patchset_rev -m \'Boardfarm Robustness Check-$index  passed $result_addr\'
            else
                    cat /home/gerrit_merge/cbn/boardfarm/results/test_results.json | jq '.test_results[] | [ .grade, .name, .message, .elapsed_time ] | @tsv' | \
                            sed -e 's/"//g' -e 's/\\t/    /g' | \
                            while read -r line; do
                            		echo "$line" >> /home/gerrit_merge/cbn/merge_"$index"_test_result.txt
                            done
                    result_for_human=$(cat /home/gerrit_merge/cbn/merge_"$index"_test_result.txt)
                    ssh $gerrit_user$gerrit_host -p $gerrit_port gerrit review $gerrit_patchset_rev -m "'" "CBN-$result_for_human""'"
                    ssh $gerrit_user$gerrit_host -p $gerrit_port gerrit review $gerrit_patchset_rev -m \'Boardfarm Robustness Check-$index failed $result_addr\'

            fi
    else
            echo "Not running on gerrit server"
    fi
done

